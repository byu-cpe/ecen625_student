ATB_BUILD_DIR = $(abspath $(PWD)/$(LEVEL)/../lab_llvm/build)
LAB_LLVM_RESOURCES_DIR = $(abspath $(PWD)/$(LEVEL)/../lab_llvm/resources)
SCHED_BUILD_DIR = $(abspath $(PWD)/$(LEVEL)/../lab_scheduling/build)

CLANG=clang-18
OPT=opt-18
LLI=lli-18
LLVM-DIS=llvm-dis-18

ifeq ($(ASAP), 1)
ILP_FLAG = 
else
ILP_FLAG = -ILP
endif

ifdef PERIOD
PERIOD_OPT = -period=$(PERIOD)
endif

ifeq ($(MYSCHEDULER),1)
SCHEDULER_SO = $(SCHED_BUILD_DIR)/scheduler_625.so
else
SCHEDULER_SO = $(LAB_LLVM_RESOURCES_DIR)/scheduler_625.so
QUIET_SCHED = -quietSched
endif

default:
	@echo "You need to specify a target. 'clang', 'abt' or 'schedule'"

# Runs the LLVM dissasembler to create human readable .ll files from binary .bc files
%.ll: %.bc
	$(LLVM-DIS) $^

# Run clang to produce *.clang.bc file
$(NAME).clang.bc: $(NAME).c
	$(CLANG) -O1 -c -emit-llvm -fno-discard-value-names -fno-vectorize -fno-unroll-loops $^ -o $@

# Run Adder Tree Balancer LLVM pass
$(NAME).atb.bc: $(NAME).clang.ll $(ATB_BUILD_DIR)/ATB_625.so
	$(OPT) -load-pass-plugin $(ATB_BUILD_DIR)/ATB_625.so -passes="ATB_625,dce" $(NAME).clang.bc -o $(NAME).atb.bc


clang: $(NAME).clang.ll

atb: $(NAME).atb.ll

atb_check: $(NAME).atb.ll
	$(LLI) $^

atb_schedule: $(NAME).atb.ll
	$(OPT) -load $(SCHEDULER_SO) -sched625 $(ILP_FLAG) $(PERIOD_OPT) $(QUIET_SCHED) $(NAME).atb.bc -o /dev/null

	# Convert scheduling to Gantt chart
	for f in *.tex; do \
    	pdflatex $$f > latex_$$f.log; \
	done

schedule: $(NAME).clang.ll
	$(OPT) -load $(SCHEDULER_SO) -sched625 $(ILP_FLAG) $(PERIOD_OPT) $(QUIET_SCHED) $(NAME).clang.bc -o /dev/null

# Convert scheduling to Gantt chart
	for f in *.tex; do \
    	pdflatex $$f > latex_$$f.log; \
	done


clean:
	rm -rf *.bc *.ll *.log *.pdf *.tex *.aux *.s